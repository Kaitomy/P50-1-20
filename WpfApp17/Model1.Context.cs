//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp17
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Kitchen_ShopEntities : DbContext
    {
        public Kitchen_ShopEntities()
            : base("name=Kitchen_ShopEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admin { get; set; }
        public virtual DbSet<Backup_All> Backup_All { get; set; }
        public virtual DbSet<Buy> Buy { get; set; }
        public virtual DbSet<Buy_History> Buy_History { get; set; }
        public virtual DbSet<Contractor> Contractor { get; set; }
        public virtual DbSet<Klient> Klient { get; set; }
        public virtual DbSet<Mark> Mark { get; set; }
        public virtual DbSet<Model> Model { get; set; }
        public virtual DbSet<Order> Order { get; set; }
        public virtual DbSet<Pay> Pay { get; set; }
        public virtual DbSet<Request> Request { get; set; }
        public virtual DbSet<Request_History> Request_History { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<Service_Delivery_Assembly> Service_Delivery_Assembly { get; set; }
        public virtual DbSet<Sklad> Sklad { get; set; }
        public virtual DbSet<Sklad_History> Sklad_History { get; set; }
        public virtual DbSet<Sort> Sort { get; set; }
        public virtual DbSet<Sotrudniki> Sotrudniki { get; set; }
        public virtual DbSet<Special> Special { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tovar> Tovar { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<View_1> View_1 { get; set; }
    
        public virtual int backup_insert(string backup_Name)
        {
            var backup_NameParameter = backup_Name != null ?
                new ObjectParameter("Backup_Name", backup_Name) :
                new ObjectParameter("Backup_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("backup_insert", backup_NameParameter);
        }
    
        public virtual int Buy_insert(string buy_Plus, Nullable<System.DateTime> buy_Date, string buy_Money, Nullable<int> users, Nullable<int> contractor, Nullable<int> request)
        {
            var buy_PlusParameter = buy_Plus != null ?
                new ObjectParameter("Buy_Plus", buy_Plus) :
                new ObjectParameter("Buy_Plus", typeof(string));
    
            var buy_DateParameter = buy_Date.HasValue ?
                new ObjectParameter("Buy_Date", buy_Date) :
                new ObjectParameter("Buy_Date", typeof(System.DateTime));
    
            var buy_MoneyParameter = buy_Money != null ?
                new ObjectParameter("Buy_Money", buy_Money) :
                new ObjectParameter("Buy_Money", typeof(string));
    
            var usersParameter = users.HasValue ?
                new ObjectParameter("Users", users) :
                new ObjectParameter("Users", typeof(int));
    
            var contractorParameter = contractor.HasValue ?
                new ObjectParameter("Contractor", contractor) :
                new ObjectParameter("Contractor", typeof(int));
    
            var requestParameter = request.HasValue ?
                new ObjectParameter("Request", request) :
                new ObjectParameter("Request", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Buy_insert", buy_PlusParameter, buy_DateParameter, buy_MoneyParameter, usersParameter, contractorParameter, requestParameter);
        }
    
        public virtual int contractor_delete(Nullable<int> iD_Contractor)
        {
            var iD_ContractorParameter = iD_Contractor.HasValue ?
                new ObjectParameter("ID_Contractor", iD_Contractor) :
                new ObjectParameter("ID_Contractor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("contractor_delete", iD_ContractorParameter);
        }
    
        public virtual int contractor_insert(string special_Name, string contractor_Name, Nullable<System.DateTime> contractor_Date, string contractor_Status, string contractor_Desc, Nullable<int> special)
        {
            var special_NameParameter = special_Name != null ?
                new ObjectParameter("Special_Name", special_Name) :
                new ObjectParameter("Special_Name", typeof(string));
    
            var contractor_NameParameter = contractor_Name != null ?
                new ObjectParameter("Contractor_Name", contractor_Name) :
                new ObjectParameter("Contractor_Name", typeof(string));
    
            var contractor_DateParameter = contractor_Date.HasValue ?
                new ObjectParameter("Contractor_Date", contractor_Date) :
                new ObjectParameter("Contractor_Date", typeof(System.DateTime));
    
            var contractor_StatusParameter = contractor_Status != null ?
                new ObjectParameter("Contractor_Status", contractor_Status) :
                new ObjectParameter("Contractor_Status", typeof(string));
    
            var contractor_DescParameter = contractor_Desc != null ?
                new ObjectParameter("Contractor_Desc", contractor_Desc) :
                new ObjectParameter("Contractor_Desc", typeof(string));
    
            var specialParameter = special.HasValue ?
                new ObjectParameter("Special", special) :
                new ObjectParameter("Special", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("contractor_insert", special_NameParameter, contractor_NameParameter, contractor_DateParameter, contractor_StatusParameter, contractor_DescParameter, specialParameter);
        }
    
        public virtual int contractor_update(string contractor_Name, Nullable<System.DateTime> contractor_Date, string contractor_Status, string contractor_Desc, Nullable<int> iD_Contractor, Nullable<int> special)
        {
            var contractor_NameParameter = contractor_Name != null ?
                new ObjectParameter("Contractor_Name", contractor_Name) :
                new ObjectParameter("Contractor_Name", typeof(string));
    
            var contractor_DateParameter = contractor_Date.HasValue ?
                new ObjectParameter("Contractor_Date", contractor_Date) :
                new ObjectParameter("Contractor_Date", typeof(System.DateTime));
    
            var contractor_StatusParameter = contractor_Status != null ?
                new ObjectParameter("Contractor_Status", contractor_Status) :
                new ObjectParameter("Contractor_Status", typeof(string));
    
            var contractor_DescParameter = contractor_Desc != null ?
                new ObjectParameter("Contractor_Desc", contractor_Desc) :
                new ObjectParameter("Contractor_Desc", typeof(string));
    
            var iD_ContractorParameter = iD_Contractor.HasValue ?
                new ObjectParameter("ID_Contractor", iD_Contractor) :
                new ObjectParameter("ID_Contractor", typeof(int));
    
            var specialParameter = special.HasValue ?
                new ObjectParameter("Special", special) :
                new ObjectParameter("Special", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("contractor_update", contractor_NameParameter, contractor_DateParameter, contractor_StatusParameter, contractor_DescParameter, iD_ContractorParameter, specialParameter);
        }
    
        public virtual int contractor_update_end(Nullable<int> iD_Contractor)
        {
            var iD_ContractorParameter = iD_Contractor.HasValue ?
                new ObjectParameter("ID_Contractor", iD_Contractor) :
                new ObjectParameter("ID_Contractor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("contractor_update_end", iD_ContractorParameter);
        }
    
        public virtual int klient_delete(Nullable<int> iD_Klient)
        {
            var iD_KlientParameter = iD_Klient.HasValue ?
                new ObjectParameter("ID_Klient", iD_Klient) :
                new ObjectParameter("ID_Klient", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("klient_delete", iD_KlientParameter);
        }
    
        public virtual int klient_insert(string users_Login, string klient_Last_Name, string klient_Name, string klient_Address, Nullable<System.DateTime> klient_Date, string klient_Middle_Name, Nullable<int> users_Klient_ID)
        {
            var users_LoginParameter = users_Login != null ?
                new ObjectParameter("Users_Login", users_Login) :
                new ObjectParameter("Users_Login", typeof(string));
    
            var klient_Last_NameParameter = klient_Last_Name != null ?
                new ObjectParameter("Klient_Last_Name", klient_Last_Name) :
                new ObjectParameter("Klient_Last_Name", typeof(string));
    
            var klient_NameParameter = klient_Name != null ?
                new ObjectParameter("Klient_Name", klient_Name) :
                new ObjectParameter("Klient_Name", typeof(string));
    
            var klient_AddressParameter = klient_Address != null ?
                new ObjectParameter("Klient_Address", klient_Address) :
                new ObjectParameter("Klient_Address", typeof(string));
    
            var klient_DateParameter = klient_Date.HasValue ?
                new ObjectParameter("Klient_Date", klient_Date) :
                new ObjectParameter("Klient_Date", typeof(System.DateTime));
    
            var klient_Middle_NameParameter = klient_Middle_Name != null ?
                new ObjectParameter("Klient_Middle_Name", klient_Middle_Name) :
                new ObjectParameter("Klient_Middle_Name", typeof(string));
    
            var users_Klient_IDParameter = users_Klient_ID.HasValue ?
                new ObjectParameter("Users_Klient_ID", users_Klient_ID) :
                new ObjectParameter("Users_Klient_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("klient_insert", users_LoginParameter, klient_Last_NameParameter, klient_NameParameter, klient_AddressParameter, klient_DateParameter, klient_Middle_NameParameter, users_Klient_IDParameter);
        }
    
        public virtual int klient_update(Nullable<int> iD_Users, string klient_Last_Name, string klient_Name, string klient_Address, Nullable<System.DateTime> klient_Date, string klient_Middle_Name)
        {
            var iD_UsersParameter = iD_Users.HasValue ?
                new ObjectParameter("ID_Users", iD_Users) :
                new ObjectParameter("ID_Users", typeof(int));
    
            var klient_Last_NameParameter = klient_Last_Name != null ?
                new ObjectParameter("Klient_Last_Name", klient_Last_Name) :
                new ObjectParameter("Klient_Last_Name", typeof(string));
    
            var klient_NameParameter = klient_Name != null ?
                new ObjectParameter("Klient_Name", klient_Name) :
                new ObjectParameter("Klient_Name", typeof(string));
    
            var klient_AddressParameter = klient_Address != null ?
                new ObjectParameter("Klient_Address", klient_Address) :
                new ObjectParameter("Klient_Address", typeof(string));
    
            var klient_DateParameter = klient_Date.HasValue ?
                new ObjectParameter("Klient_Date", klient_Date) :
                new ObjectParameter("Klient_Date", typeof(System.DateTime));
    
            var klient_Middle_NameParameter = klient_Middle_Name != null ?
                new ObjectParameter("Klient_Middle_Name", klient_Middle_Name) :
                new ObjectParameter("Klient_Middle_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("klient_update", iD_UsersParameter, klient_Last_NameParameter, klient_NameParameter, klient_AddressParameter, klient_DateParameter, klient_Middle_NameParameter);
        }
    
        public virtual int mark_delete(string mark_Name)
        {
            var mark_NameParameter = mark_Name != null ?
                new ObjectParameter("Mark_Name", mark_Name) :
                new ObjectParameter("Mark_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mark_delete", mark_NameParameter);
        }
    
        public virtual int mark_insert(string mark_Name)
        {
            var mark_NameParameter = mark_Name != null ?
                new ObjectParameter("Mark_Name", mark_Name) :
                new ObjectParameter("Mark_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mark_insert", mark_NameParameter);
        }
    
        public virtual int mark_update(Nullable<int> iD_Mark, string mark_Name)
        {
            var iD_MarkParameter = iD_Mark.HasValue ?
                new ObjectParameter("ID_Mark", iD_Mark) :
                new ObjectParameter("ID_Mark", typeof(int));
    
            var mark_NameParameter = mark_Name != null ?
                new ObjectParameter("Mark_Name", mark_Name) :
                new ObjectParameter("Mark_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mark_update", iD_MarkParameter, mark_NameParameter);
        }
    
        public virtual int model_delete(Nullable<int> iD_Model)
        {
            var iD_ModelParameter = iD_Model.HasValue ?
                new ObjectParameter("ID_Model", iD_Model) :
                new ObjectParameter("ID_Model", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("model_delete", iD_ModelParameter);
        }
    
        public virtual int model_insert(string model_Name, Nullable<int> mark_ID)
        {
            var model_NameParameter = model_Name != null ?
                new ObjectParameter("Model_Name", model_Name) :
                new ObjectParameter("Model_Name", typeof(string));
    
            var mark_IDParameter = mark_ID.HasValue ?
                new ObjectParameter("Mark_ID", mark_ID) :
                new ObjectParameter("Mark_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("model_insert", model_NameParameter, mark_IDParameter);
        }
    
        public virtual int model_insert_mark(string name_Mark, string model_Name, Nullable<int> mark)
        {
            var name_MarkParameter = name_Mark != null ?
                new ObjectParameter("Name_Mark", name_Mark) :
                new ObjectParameter("Name_Mark", typeof(string));
    
            var model_NameParameter = model_Name != null ?
                new ObjectParameter("Model_Name", model_Name) :
                new ObjectParameter("Model_Name", typeof(string));
    
            var markParameter = mark.HasValue ?
                new ObjectParameter("Mark", mark) :
                new ObjectParameter("Mark", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("model_insert_mark", name_MarkParameter, model_NameParameter, markParameter);
        }
    
        public virtual int model_update(Nullable<int> iD_Model, string model_Name, Nullable<int> mark_ID)
        {
            var iD_ModelParameter = iD_Model.HasValue ?
                new ObjectParameter("ID_Model", iD_Model) :
                new ObjectParameter("ID_Model", typeof(int));
    
            var model_NameParameter = model_Name != null ?
                new ObjectParameter("Model_Name", model_Name) :
                new ObjectParameter("Model_Name", typeof(string));
    
            var mark_IDParameter = mark_ID.HasValue ?
                new ObjectParameter("Mark_ID", mark_ID) :
                new ObjectParameter("Mark_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("model_update", iD_ModelParameter, model_NameParameter, mark_IDParameter);
        }
    
        public virtual int model_update_s(Nullable<int> iD_Model, string model_Name)
        {
            var iD_ModelParameter = iD_Model.HasValue ?
                new ObjectParameter("ID_Model", iD_Model) :
                new ObjectParameter("ID_Model", typeof(int));
    
            var model_NameParameter = model_Name != null ?
                new ObjectParameter("Model_Name", model_Name) :
                new ObjectParameter("Model_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("model_update_s", iD_ModelParameter, model_NameParameter);
        }
    
        public virtual int order_insert(Nullable<System.DateTime> order_Date, string order_Amount, Nullable<int> order_Number, string order_Status, Nullable<int> service, Nullable<int> tovar, Nullable<int> users)
        {
            var order_DateParameter = order_Date.HasValue ?
                new ObjectParameter("Order_Date", order_Date) :
                new ObjectParameter("Order_Date", typeof(System.DateTime));
    
            var order_AmountParameter = order_Amount != null ?
                new ObjectParameter("Order_Amount", order_Amount) :
                new ObjectParameter("Order_Amount", typeof(string));
    
            var order_NumberParameter = order_Number.HasValue ?
                new ObjectParameter("Order_Number", order_Number) :
                new ObjectParameter("Order_Number", typeof(int));
    
            var order_StatusParameter = order_Status != null ?
                new ObjectParameter("Order_Status", order_Status) :
                new ObjectParameter("Order_Status", typeof(string));
    
            var serviceParameter = service.HasValue ?
                new ObjectParameter("Service", service) :
                new ObjectParameter("Service", typeof(int));
    
            var tovarParameter = tovar.HasValue ?
                new ObjectParameter("Tovar", tovar) :
                new ObjectParameter("Tovar", typeof(int));
    
            var usersParameter = users.HasValue ?
                new ObjectParameter("Users", users) :
                new ObjectParameter("Users", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("order_insert", order_DateParameter, order_AmountParameter, order_NumberParameter, order_StatusParameter, serviceParameter, tovarParameter, usersParameter);
        }
    
        public virtual int order_update(Nullable<int> iD_Order)
        {
            var iD_OrderParameter = iD_Order.HasValue ?
                new ObjectParameter("ID_Order", iD_Order) :
                new ObjectParameter("ID_Order", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("order_update", iD_OrderParameter);
        }
    
        public virtual int pay_insert(Nullable<System.DateTime> pay_Date, string pay_Money, Nullable<int> users)
        {
            var pay_DateParameter = pay_Date.HasValue ?
                new ObjectParameter("Pay_Date", pay_Date) :
                new ObjectParameter("Pay_Date", typeof(System.DateTime));
    
            var pay_MoneyParameter = pay_Money != null ?
                new ObjectParameter("Pay_Money", pay_Money) :
                new ObjectParameter("Pay_Money", typeof(string));
    
            var usersParameter = users.HasValue ?
                new ObjectParameter("Users", users) :
                new ObjectParameter("Users", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pay_insert", pay_DateParameter, pay_MoneyParameter, usersParameter);
        }
    
        public virtual int request_insert(string request_Desc, Nullable<System.DateTime> request_Date_Start, Nullable<System.DateTime> request_Date_End, string request_Status, Nullable<int> users_ID)
        {
            var request_DescParameter = request_Desc != null ?
                new ObjectParameter("Request_Desc", request_Desc) :
                new ObjectParameter("Request_Desc", typeof(string));
    
            var request_Date_StartParameter = request_Date_Start.HasValue ?
                new ObjectParameter("Request_Date_Start", request_Date_Start) :
                new ObjectParameter("Request_Date_Start", typeof(System.DateTime));
    
            var request_Date_EndParameter = request_Date_End.HasValue ?
                new ObjectParameter("Request_Date_End", request_Date_End) :
                new ObjectParameter("Request_Date_End", typeof(System.DateTime));
    
            var request_StatusParameter = request_Status != null ?
                new ObjectParameter("Request_Status", request_Status) :
                new ObjectParameter("Request_Status", typeof(string));
    
            var users_IDParameter = users_ID.HasValue ?
                new ObjectParameter("Users_ID", users_ID) :
                new ObjectParameter("Users_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("request_insert", request_DescParameter, request_Date_StartParameter, request_Date_EndParameter, request_StatusParameter, users_IDParameter);
        }
    
        public virtual int request_update(Nullable<int> iD_Request, Nullable<System.DateTime> date_End)
        {
            var iD_RequestParameter = iD_Request.HasValue ?
                new ObjectParameter("ID_Request", iD_Request) :
                new ObjectParameter("ID_Request", typeof(int));
    
            var date_EndParameter = date_End.HasValue ?
                new ObjectParameter("Date_End", date_End) :
                new ObjectParameter("Date_End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("request_update", iD_RequestParameter, date_EndParameter);
        }
    
        public virtual int roles_delete(string roles_Name)
        {
            var roles_NameParameter = roles_Name != null ?
                new ObjectParameter("Roles_Name", roles_Name) :
                new ObjectParameter("Roles_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("roles_delete", roles_NameParameter);
        }
    
        public virtual int roles_insert(string roles_Name)
        {
            var roles_NameParameter = roles_Name != null ?
                new ObjectParameter("Roles_Name", roles_Name) :
                new ObjectParameter("Roles_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("roles_insert", roles_NameParameter);
        }
    
        public virtual int roles_update(Nullable<int> iD_Roles, string roles_Name)
        {
            var iD_RolesParameter = iD_Roles.HasValue ?
                new ObjectParameter("ID_Roles", iD_Roles) :
                new ObjectParameter("ID_Roles", typeof(int));
    
            var roles_NameParameter = roles_Name != null ?
                new ObjectParameter("Roles_Name", roles_Name) :
                new ObjectParameter("Roles_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("roles_update", iD_RolesParameter, roles_NameParameter);
        }
    
        public virtual int service_delete(Nullable<int> iD_Service)
        {
            var iD_ServiceParameter = iD_Service.HasValue ?
                new ObjectParameter("ID_Service", iD_Service) :
                new ObjectParameter("ID_Service", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("service_delete", iD_ServiceParameter);
        }
    
        public virtual int service_insert(string service_Name, string service_Country, string service_Price, string service_Period)
        {
            var service_NameParameter = service_Name != null ?
                new ObjectParameter("Service_Name", service_Name) :
                new ObjectParameter("Service_Name", typeof(string));
    
            var service_CountryParameter = service_Country != null ?
                new ObjectParameter("Service_Country", service_Country) :
                new ObjectParameter("Service_Country", typeof(string));
    
            var service_PriceParameter = service_Price != null ?
                new ObjectParameter("Service_Price", service_Price) :
                new ObjectParameter("Service_Price", typeof(string));
    
            var service_PeriodParameter = service_Period != null ?
                new ObjectParameter("Service_Period", service_Period) :
                new ObjectParameter("Service_Period", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("service_insert", service_NameParameter, service_CountryParameter, service_PriceParameter, service_PeriodParameter);
        }
    
        public virtual int service_update(Nullable<int> iD_Service, string service_Name, string service_Country, string service_Price, string service_Period)
        {
            var iD_ServiceParameter = iD_Service.HasValue ?
                new ObjectParameter("ID_Service", iD_Service) :
                new ObjectParameter("ID_Service", typeof(int));
    
            var service_NameParameter = service_Name != null ?
                new ObjectParameter("Service_Name", service_Name) :
                new ObjectParameter("Service_Name", typeof(string));
    
            var service_CountryParameter = service_Country != null ?
                new ObjectParameter("Service_Country", service_Country) :
                new ObjectParameter("Service_Country", typeof(string));
    
            var service_PriceParameter = service_Price != null ?
                new ObjectParameter("Service_Price", service_Price) :
                new ObjectParameter("Service_Price", typeof(string));
    
            var service_PeriodParameter = service_Period != null ?
                new ObjectParameter("Service_Period", service_Period) :
                new ObjectParameter("Service_Period", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("service_update", iD_ServiceParameter, service_NameParameter, service_CountryParameter, service_PriceParameter, service_PeriodParameter);
        }
    
        public virtual int sklad_delete(Nullable<int> iD_Sklad)
        {
            var iD_SkladParameter = iD_Sklad.HasValue ?
                new ObjectParameter("ID_Sklad", iD_Sklad) :
                new ObjectParameter("ID_Sklad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sklad_delete", iD_SkladParameter);
        }
    
        public virtual int sklad_insert_new(string sklad_Address, string sklad_Sity, string sklad_Name)
        {
            var sklad_AddressParameter = sklad_Address != null ?
                new ObjectParameter("Sklad_Address", sklad_Address) :
                new ObjectParameter("Sklad_Address", typeof(string));
    
            var sklad_SityParameter = sklad_Sity != null ?
                new ObjectParameter("Sklad_Sity", sklad_Sity) :
                new ObjectParameter("Sklad_Sity", typeof(string));
    
            var sklad_NameParameter = sklad_Name != null ?
                new ObjectParameter("Sklad_Name", sklad_Name) :
                new ObjectParameter("Sklad_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sklad_insert_new", sklad_AddressParameter, sklad_SityParameter, sklad_NameParameter);
        }
    
        public virtual int sklad_update(Nullable<int> iD_Sklad, string sklad_Address, string sklad_Sity, string sklad_Name)
        {
            var iD_SkladParameter = iD_Sklad.HasValue ?
                new ObjectParameter("ID_Sklad", iD_Sklad) :
                new ObjectParameter("ID_Sklad", typeof(int));
    
            var sklad_AddressParameter = sklad_Address != null ?
                new ObjectParameter("Sklad_Address", sklad_Address) :
                new ObjectParameter("Sklad_Address", typeof(string));
    
            var sklad_SityParameter = sklad_Sity != null ?
                new ObjectParameter("Sklad_Sity", sklad_Sity) :
                new ObjectParameter("Sklad_Sity", typeof(string));
    
            var sklad_NameParameter = sklad_Name != null ?
                new ObjectParameter("Sklad_Name", sklad_Name) :
                new ObjectParameter("Sklad_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sklad_update", iD_SkladParameter, sklad_AddressParameter, sklad_SityParameter, sklad_NameParameter);
        }
    
        public virtual int sort_delete(string sort_Name)
        {
            var sort_NameParameter = sort_Name != null ?
                new ObjectParameter("Sort_Name", sort_Name) :
                new ObjectParameter("Sort_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sort_delete", sort_NameParameter);
        }
    
        public virtual int sort_insert(string sort_Name)
        {
            var sort_NameParameter = sort_Name != null ?
                new ObjectParameter("Sort_Name", sort_Name) :
                new ObjectParameter("Sort_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sort_insert", sort_NameParameter);
        }
    
        public virtual int sort_update(Nullable<int> iD_Sort, string sort_Name)
        {
            var iD_SortParameter = iD_Sort.HasValue ?
                new ObjectParameter("ID_Sort", iD_Sort) :
                new ObjectParameter("ID_Sort", typeof(int));
    
            var sort_NameParameter = sort_Name != null ?
                new ObjectParameter("Sort_Name", sort_Name) :
                new ObjectParameter("Sort_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sort_update", iD_SortParameter, sort_NameParameter);
        }
    
        public virtual int sotrudniki_delete(Nullable<int> iD_Sotrudniki)
        {
            var iD_SotrudnikiParameter = iD_Sotrudniki.HasValue ?
                new ObjectParameter("ID_Sotrudniki", iD_Sotrudniki) :
                new ObjectParameter("ID_Sotrudniki", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sotrudniki_delete", iD_SotrudnikiParameter);
        }
    
        public virtual int sotrudniki_insert(string users_Login, string sotrudniki_Last_Name, string sotrudniki_Name, string sotrudniki_Education, string sotrudniki_Experience, string sotrudniki_Age, string sotrudniki_Language, string sotrudniki_Middle_Name, string sotrudniki_Money, Nullable<int> users_Sotrudniki_ID, Nullable<int> roles_ID)
        {
            var users_LoginParameter = users_Login != null ?
                new ObjectParameter("Users_Login", users_Login) :
                new ObjectParameter("Users_Login", typeof(string));
    
            var sotrudniki_Last_NameParameter = sotrudniki_Last_Name != null ?
                new ObjectParameter("Sotrudniki_Last_Name", sotrudniki_Last_Name) :
                new ObjectParameter("Sotrudniki_Last_Name", typeof(string));
    
            var sotrudniki_NameParameter = sotrudniki_Name != null ?
                new ObjectParameter("Sotrudniki_Name", sotrudniki_Name) :
                new ObjectParameter("Sotrudniki_Name", typeof(string));
    
            var sotrudniki_EducationParameter = sotrudniki_Education != null ?
                new ObjectParameter("Sotrudniki_Education", sotrudniki_Education) :
                new ObjectParameter("Sotrudniki_Education", typeof(string));
    
            var sotrudniki_ExperienceParameter = sotrudniki_Experience != null ?
                new ObjectParameter("Sotrudniki_Experience", sotrudniki_Experience) :
                new ObjectParameter("Sotrudniki_Experience", typeof(string));
    
            var sotrudniki_AgeParameter = sotrudniki_Age != null ?
                new ObjectParameter("Sotrudniki_Age", sotrudniki_Age) :
                new ObjectParameter("Sotrudniki_Age", typeof(string));
    
            var sotrudniki_LanguageParameter = sotrudniki_Language != null ?
                new ObjectParameter("Sotrudniki_Language", sotrudniki_Language) :
                new ObjectParameter("Sotrudniki_Language", typeof(string));
    
            var sotrudniki_Middle_NameParameter = sotrudniki_Middle_Name != null ?
                new ObjectParameter("Sotrudniki_Middle_Name", sotrudniki_Middle_Name) :
                new ObjectParameter("Sotrudniki_Middle_Name", typeof(string));
    
            var sotrudniki_MoneyParameter = sotrudniki_Money != null ?
                new ObjectParameter("Sotrudniki_Money", sotrudniki_Money) :
                new ObjectParameter("Sotrudniki_Money", typeof(string));
    
            var users_Sotrudniki_IDParameter = users_Sotrudniki_ID.HasValue ?
                new ObjectParameter("Users_Sotrudniki_ID", users_Sotrudniki_ID) :
                new ObjectParameter("Users_Sotrudniki_ID", typeof(int));
    
            var roles_IDParameter = roles_ID.HasValue ?
                new ObjectParameter("Roles_ID", roles_ID) :
                new ObjectParameter("Roles_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sotrudniki_insert", users_LoginParameter, sotrudniki_Last_NameParameter, sotrudniki_NameParameter, sotrudniki_EducationParameter, sotrudniki_ExperienceParameter, sotrudniki_AgeParameter, sotrudniki_LanguageParameter, sotrudniki_Middle_NameParameter, sotrudniki_MoneyParameter, users_Sotrudniki_IDParameter, roles_IDParameter);
        }
    
        public virtual int sotrudniki_update(Nullable<int> iD_Sotrudniki, string sotrudniki_Last_Name, string sotrudniki_Name, string sotrudniki_Education, string sotrudniki_Experience, string sotrudniki_Age, string sotrudniki_Language, string sotrudniki_Middle_Name)
        {
            var iD_SotrudnikiParameter = iD_Sotrudniki.HasValue ?
                new ObjectParameter("ID_Sotrudniki", iD_Sotrudniki) :
                new ObjectParameter("ID_Sotrudniki", typeof(int));
    
            var sotrudniki_Last_NameParameter = sotrudniki_Last_Name != null ?
                new ObjectParameter("Sotrudniki_Last_Name", sotrudniki_Last_Name) :
                new ObjectParameter("Sotrudniki_Last_Name", typeof(string));
    
            var sotrudniki_NameParameter = sotrudniki_Name != null ?
                new ObjectParameter("Sotrudniki_Name", sotrudniki_Name) :
                new ObjectParameter("Sotrudniki_Name", typeof(string));
    
            var sotrudniki_EducationParameter = sotrudniki_Education != null ?
                new ObjectParameter("Sotrudniki_Education", sotrudniki_Education) :
                new ObjectParameter("Sotrudniki_Education", typeof(string));
    
            var sotrudniki_ExperienceParameter = sotrudniki_Experience != null ?
                new ObjectParameter("Sotrudniki_Experience", sotrudniki_Experience) :
                new ObjectParameter("Sotrudniki_Experience", typeof(string));
    
            var sotrudniki_AgeParameter = sotrudniki_Age != null ?
                new ObjectParameter("Sotrudniki_Age", sotrudniki_Age) :
                new ObjectParameter("Sotrudniki_Age", typeof(string));
    
            var sotrudniki_LanguageParameter = sotrudniki_Language != null ?
                new ObjectParameter("Sotrudniki_Language", sotrudniki_Language) :
                new ObjectParameter("Sotrudniki_Language", typeof(string));
    
            var sotrudniki_Middle_NameParameter = sotrudniki_Middle_Name != null ?
                new ObjectParameter("Sotrudniki_Middle_Name", sotrudniki_Middle_Name) :
                new ObjectParameter("Sotrudniki_Middle_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sotrudniki_update", iD_SotrudnikiParameter, sotrudniki_Last_NameParameter, sotrudniki_NameParameter, sotrudniki_EducationParameter, sotrudniki_ExperienceParameter, sotrudniki_AgeParameter, sotrudniki_LanguageParameter, sotrudniki_Middle_NameParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int special_delete(string special_Name)
        {
            var special_NameParameter = special_Name != null ?
                new ObjectParameter("Special_Name", special_Name) :
                new ObjectParameter("Special_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("special_delete", special_NameParameter);
        }
    
        public virtual int special_insert(string special_Name)
        {
            var special_NameParameter = special_Name != null ?
                new ObjectParameter("Special_Name", special_Name) :
                new ObjectParameter("Special_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("special_insert", special_NameParameter);
        }
    
        public virtual int special_update(Nullable<int> iD_Special, string special_Name)
        {
            var iD_SpecialParameter = iD_Special.HasValue ?
                new ObjectParameter("ID_Special", iD_Special) :
                new ObjectParameter("ID_Special", typeof(int));
    
            var special_NameParameter = special_Name != null ?
                new ObjectParameter("Special_Name", special_Name) :
                new ObjectParameter("Special_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("special_update", iD_SpecialParameter, special_NameParameter);
        }
    
        public virtual int tovar_delete(Nullable<int> iD_Tovar)
        {
            var iD_TovarParameter = iD_Tovar.HasValue ?
                new ObjectParameter("ID_Tovar", iD_Tovar) :
                new ObjectParameter("ID_Tovar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tovar_delete", iD_TovarParameter);
        }
    
        public virtual int tovar_insert(string tovar_Image, string tovar_Name, string tovar_Colour, string tovar_Size, string tovar_Desc, string tovar_Country, Nullable<int> sklad_ID, Nullable<int> model_ID, Nullable<int> sort_ID)
        {
            var tovar_ImageParameter = tovar_Image != null ?
                new ObjectParameter("Tovar_Image", tovar_Image) :
                new ObjectParameter("Tovar_Image", typeof(string));
    
            var tovar_NameParameter = tovar_Name != null ?
                new ObjectParameter("Tovar_Name", tovar_Name) :
                new ObjectParameter("Tovar_Name", typeof(string));
    
            var tovar_ColourParameter = tovar_Colour != null ?
                new ObjectParameter("Tovar_Colour", tovar_Colour) :
                new ObjectParameter("Tovar_Colour", typeof(string));
    
            var tovar_SizeParameter = tovar_Size != null ?
                new ObjectParameter("Tovar_Size", tovar_Size) :
                new ObjectParameter("Tovar_Size", typeof(string));
    
            var tovar_DescParameter = tovar_Desc != null ?
                new ObjectParameter("Tovar_Desc", tovar_Desc) :
                new ObjectParameter("Tovar_Desc", typeof(string));
    
            var tovar_CountryParameter = tovar_Country != null ?
                new ObjectParameter("Tovar_Country", tovar_Country) :
                new ObjectParameter("Tovar_Country", typeof(string));
    
            var sklad_IDParameter = sklad_ID.HasValue ?
                new ObjectParameter("Sklad_ID", sklad_ID) :
                new ObjectParameter("Sklad_ID", typeof(int));
    
            var model_IDParameter = model_ID.HasValue ?
                new ObjectParameter("Model_ID", model_ID) :
                new ObjectParameter("Model_ID", typeof(int));
    
            var sort_IDParameter = sort_ID.HasValue ?
                new ObjectParameter("Sort_ID", sort_ID) :
                new ObjectParameter("Sort_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tovar_insert", tovar_ImageParameter, tovar_NameParameter, tovar_ColourParameter, tovar_SizeParameter, tovar_DescParameter, tovar_CountryParameter, sklad_IDParameter, model_IDParameter, sort_IDParameter);
        }
    
        public virtual int Users_delete(Nullable<int> iD_Users)
        {
            var iD_UsersParameter = iD_Users.HasValue ?
                new ObjectParameter("ID_Users", iD_Users) :
                new ObjectParameter("ID_Users", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Users_delete", iD_UsersParameter);
        }
    
        public virtual int users_insert(string users_Login, string users_Password, string users_Email, string users_Status)
        {
            var users_LoginParameter = users_Login != null ?
                new ObjectParameter("Users_Login", users_Login) :
                new ObjectParameter("Users_Login", typeof(string));
    
            var users_PasswordParameter = users_Password != null ?
                new ObjectParameter("Users_Password", users_Password) :
                new ObjectParameter("Users_Password", typeof(string));
    
            var users_EmailParameter = users_Email != null ?
                new ObjectParameter("Users_Email", users_Email) :
                new ObjectParameter("Users_Email", typeof(string));
    
            var users_StatusParameter = users_Status != null ?
                new ObjectParameter("Users_Status", users_Status) :
                new ObjectParameter("Users_Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("users_insert", users_LoginParameter, users_PasswordParameter, users_EmailParameter, users_StatusParameter);
        }
    
        public virtual int users_update(Nullable<int> iD_Users, string users_Login, string users_Password, string users_Email)
        {
            var iD_UsersParameter = iD_Users.HasValue ?
                new ObjectParameter("ID_Users", iD_Users) :
                new ObjectParameter("ID_Users", typeof(int));
    
            var users_LoginParameter = users_Login != null ?
                new ObjectParameter("Users_Login", users_Login) :
                new ObjectParameter("Users_Login", typeof(string));
    
            var users_PasswordParameter = users_Password != null ?
                new ObjectParameter("Users_Password", users_Password) :
                new ObjectParameter("Users_Password", typeof(string));
    
            var users_EmailParameter = users_Email != null ?
                new ObjectParameter("Users_Email", users_Email) :
                new ObjectParameter("Users_Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("users_update", iD_UsersParameter, users_LoginParameter, users_PasswordParameter, users_EmailParameter);
        }
    
        public virtual int users_update_block(Nullable<int> iD_Users)
        {
            var iD_UsersParameter = iD_Users.HasValue ?
                new ObjectParameter("ID_Users", iD_Users) :
                new ObjectParameter("ID_Users", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("users_update_block", iD_UsersParameter);
        }
    }
}
